KGD-802-B_MIB DEFINITIONS ::= BEGIN

IMPORTS
        enterprises, OBJECT-TYPE, NetworkAddress, IpAddress, Counter,
        Gauge, TimeTicks
                FROM RFC1155-SMI
        DisplayString, PhysAddress
                FROM RFC1213-MIB;   

KTI OBJECT IDENTIFIER ::= { enterprises 867 }

KGD-802-B OBJECT IDENTIFIER ::= { KTI 65 }

SYS_OBJ OBJECT IDENTIFIER ::= { KGD-802-B 1 }

DDM_Table OBJECT-TYPE
        SYNTAX  SEQUENCE OF DDM_Entry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                ""
        ::= { SYS_OBJ 1 }

DDM_Entry OBJECT-TYPE
        SYNTAX  DDM_Entry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Port number"
        INDEX   { Identifier }
        ::= { DDM_Table 1 }

DDM_Entry ::= SEQUENCE {
    Identifier
        INTEGER,
    Connector
        INTEGER,
    SONET_Compliance_4
        INTEGER,
    SONET_Compliance_5
        INTEGER,
    Ethernet_Compliance
        INTEGER,
    Vendor_Name
        OCTET STRING,
    Vendor_OUI
        OCTET STRING,
    Temperature
        OCTET STRING,
    Voltage
        OCTET STRING,
    TX_Power
        OCTET STRING
}

-- object types

Identifier OBJECT-TYPE
        SYNTAX    INTEGER {
                  Unknown_or_unspecified(0),
                  GBIC(1),
                  Module/connector_soldered_to_motherboard(2),
                  SFP_transceiver(3),
                  Reserved(4),
                  Vendor_specific(0x80)                   
                  }
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Type of transceiver."
        ::= { DDM_Entry 1 }

Connector OBJECT-TYPE
        SYNTAX    INTEGER {
                  Unknown_or_unspecified(0x00),
                  SC(0x01),
                  Fibre_Channel_Style_1_copper_connector(0x02),
                  Fibre_Channel_Style_2_copper_connector(0x03),
                  BNC/TNC(0x04),
                  Fibre_Channel_coaxial_headers(0x05),
                  Fiber_Jack(0x06),
                  LC(0x07),
                  MT-RJ(0x08),
                  MU(0x09),
                  SG(0x0A),
                  Optical_pigtail(0x0B),
                  Reserved(0x0C),
                  HSSDC_II(0x20),
                  Copper_Pigtail(0x21),
                  Reserved(0x22),
                  Vendor_specific(0x80)
                  }
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Code for connector type."
        ::= { DDM_Entry 2 }

SONET_Compliance_4 OBJECT-TYPE
        SYNTAX    INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "SONET Compliance(4)
                 bit 7 : ESCON MMF, 1310nm LED
                 bit 6 : ESCON SMF, 1310nm Laser
                 bit 5 : OC-192, short reach
                 bit 4 : SONET reach specifier bit 1
                 bit 3 : SONET reach specifier bit 2
                 bit 2 : OC-48, longreach
                 bit 1 : OC-48, intermediate reach
                 bit 0 : OC-48, shortreach
                "
        ::= { DDM_Entry 3 }

SONET_Compliance_5 OBJECT-TYPE
        SYNTAX    INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "SONET Compliance(5)
                 bit 7 : Unallocated
                 bit 6 : OC-12, single mode long reach
                 bit 5 : OC-12, single mode inter reach
                 bit 4 : OC-12, short reach
                 bit 3 : Unallocated
                 bit 2 : OC-3, single mode long reach
                 bit 1 : OC-3, single mode inter reach
                 bit 0 : OC-3, short reach
                "
        ::= { DDM_Entry 4 }

Ethernet_Compliance OBJECT-TYPE
        SYNTAX    INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Ethernet Compliance
                 bit 7 : BASE-PX
                 bit 6 : BASE-BX10
                 bit 5 : 100BASE-FX
                 bit 4 : 100BASE-LX/LX10
                 bit 3 : 1000BASE-T
                 bit 2 : 1000BASE-CX
                 bit 1 : 1000BASE-LX
                 bit 0 : 1000BASE-SX
                "
        ::= { DDM_Entry 5 }

Vendor_Name OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "SFP vendor name (ASCII)."
        ::= { DDM_Entry 6 }

Vendor_OUI OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "SFP vendor IEEE company ID."
        ::= { DDM_Entry 7 }

Temperature  OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Internally measured module temperature.(Celsius)"
        ::= { DDM_Entry 8 }

Voltage  OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Internally measured supply voltage in transceiver.(V)"
        ::= { DDM_Entry 9 }

TX_Power  OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Measured TX output power(uW). 
                 dBm = -30 dBm + log10( N ) x 10 
                "
        ::= { DDM_Entry 10 }

Reboot OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Set 0 to reboot the device"
        ::= { SYS_OBJ 2 }
 
tftpUpload OBJECT IDENTIFIER ::= { SYS_OBJ 3 }
        
tftpIpAddress OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "IP address of the TFTP server"
        ::= { tftpUpload 1 }

tftpImageFile OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "File name of the new firmware file"
        ::= { tftpUpload 2 }
 
tftpStartGo OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Start upload command"
        ::= { tftpUpload 3 }
 
END

