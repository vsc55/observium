

--
-- 2016.01.16 orginal mib file modifyed by kzsolt and paroka based on LC V2.0 FW 3.13 description
--

LAN-MODULE DEFINITIONS ::= BEGIN

IMPORTS
   enterprises, IpAddress, Gauge, TimeTicks     FROM RFC1155-SMI
   DisplayString                                FROM RFC1213-MIB
   OBJECT-TYPE                                  FROM RFC-1212
   TRAP-TYPE                                    FROM RFC-1215;

lan-module                          OBJECT IDENTIFIER ::=  { enterprises 17095 }

product                            OBJECT IDENTIFIER ::=  { lan-module 1 }
setup                               OBJECT IDENTIFIER ::=  { lan-module 2 }
control                             OBJECT IDENTIFIER ::=  { lan-module 3 }
sense                             OBJECT IDENTIFIER ::=  { lan-module 4 }
csense                             OBJECT IDENTIFIER ::=  { lan-module 5 }
esense                             OBJECT IDENTIFIER ::=  { lan-module 6 }
psense                             OBJECT IDENTIFIER ::=  { lan-module 7 }
dsense                             OBJECT IDENTIFIER ::=  { lan-module 10 }

   ON-OFF          ::=   INTEGER { ON(1), OFF(0) }


--
-- Name and version found at 
--  iso.org.dod.internet.mgmt.mib-1.system.sysDescr with version
--  iso.org.dod.internet.mgmt.mib-1.system.sysUpTimecd
--  iso.org.dod.internet.mgmt.mib-1.system.sysContact with hostname
-- 

name    OBJECT-TYPE
   SYNTAX DisplayString
   ACCESS read-write
   STATUS mandatory
   DESCRIPTION
      "Name of product. e.g. LAN-Kontroler"
   ::= { product 1 }
-- return no such name!

version    OBJECT-TYPE
   SYNTAX DisplayString
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Version string. e.g. 2.0"
   ::= { product 2 }
-- return no such name!
   
date    OBJECT-TYPE
   SYNTAX DisplayString
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Date of version"
   ::= { product 3 }
-- return no such name!
   
out0 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION 
        "OUT0 output set or read"
    ::= { control 1 }
    
out1 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "OUT1 output set or red"
    ::= { control 2 }
	
out2 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "OUT2 output set or red"
    ::= { control 3 }
	
out3 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "OUT3 output set or red"
    ::= { control 4 }
	
out4 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "OUT4 output set or red"
    ::= { control 5 }
	
out5 OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "OUT5 output set or red"
    ::= { control 6 }
	
outall OBJECT-TYPE
    SYNTAX INTEGER { OFF(1), ON(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "ALL output set or red"
    ::= { control 100 }
	
temp   OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Temp value: Air temperature around board"
   ::= { sense 1 }
   
vcc  OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "VCC value: Input VCC supplay board"
   ::= { sense 2 }
   
inp1    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp1 value: voltage max 7.2V DC temperature from NTC10 or voltage"
   ::= { sense 3 }
   
inp2    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp2 value: voltage max 36V DC"
   ::= { sense 4 }

inp3    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp3 value: temperature from PT1000 or PT1000 conected to Solar System Controller"
   ::= { sense 5 }
   
inp4    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp4 value: DC current, max 3A"
   ::= { sense 6 }
   
inp5    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp5 value: temperature from NTC10 or KTY-84"
   ::= { sense 7 }
   
inp6    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp6 value: temperature from DS18B20"
   ::= { csense 1 }  

inp7    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp7 value: temperature from DS18B20"
   ::= { csense 2 }     
   
inp8    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp8 value: temperature from DS18B20"
   ::= { csense 3 }     
   
inp9    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp9 value: temperature from DS18B20"
   ::= { csense 4 }    
   
inp10    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp10 value: temperature from DS18B20"
   ::= { csense 5 }    
   
inp11    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Inp11 value: temperature from DS18B20"
   ::= { csense 6 }    
   
DTH22-1    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Temp any"
   ::= { esense 1 }    
   
DTH22-2    OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Temp any"
   ::= { esense 2 }    
   
i3xi5   OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "I3xI5 value: Power[W] from Input3 [V] and Input5[A]"
   ::= { psense 1 }
   
Pxt   OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "Pxt value: Energy[Wh] from Input3 and Input5 "
   ::= { psense 2 }
   
Pinp4D   OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "What is this "
   ::= { psense 3 }
   
Pinp4D-24H   OBJECT-TYPE
   SYNTAX DisplayString (SIZE (0..15))
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "What is this "
   ::= { psense 4 }
   
inp1Digital   OBJECT-TYPE
   SYNTAX INTEGER { HIGH(1), LOW(0) }
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "INP1D Digital state"
   ::= { dsense 1 }

inp2Digital   OBJECT-TYPE
   SYNTAX INTEGER { HIGH(1), LOW(0) }
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "INP2D Digital state"
   ::= { dsense 2 }    
 
inp3Digital   OBJECT-TYPE
   SYNTAX INTEGER { HIGH(1), LOW(0) }
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "INP3D Digital state"
   ::= { dsense 3 }  

inp4Digital   OBJECT-TYPE
   SYNTAX INTEGER { HIGH(1), LOW(0) }
   ACCESS read-only
   STATUS mandatory
   DESCRIPTION
      "INP4D Digital state"
   ::= { dsense 4 }  

--
-- trap definitions
--

traps OBJECT-TYPE
    SYNTAX SEQUENCE OF TrapEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "Trap table"
    ::= { setup 1 }        
    
trapEntry OBJECT-TYPE
    SYNTAX TrapEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "Single trap entry containing trap receiver info."
    INDEX { trapReceiverNumber }
     ::= { traps 1 }
     
trapEntry ::=
    SEQUENCE {
        trapReceiverNumber
            INTEGER,
        trapEnabled
            INTEGER,
        trapReceiverIPAddress
            IpAddress,
        trapCommunity
            DisplayString
    }            
    
trapReceiverNumber  OBJECT-TYPE
    SYNTAX INTEGER (0.. 4)
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "Index of trap receiver"
    ::= { trapEntry 1 }
    
trapEnabled OBJECT-TYPE
    SYNTAX INTEGER { Yes(1), No(0) }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Indicates if this trap entry is enabled or not."
    ::= { trapEntry 2 }

trapReceiverIPAddress OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-write
    STATUS mandatory
    DESCRIPTION
        "Trap receiver IP address"
    ::= { trapEntry 3 }

trapCommunity OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (0..7))
    ACCESS  read-write
    STATUS mandatory
    DESCRIPTION
        "Trap community to be used by agent to send trap"
    ::= { trapEntry 4 }


END   
